#include<LiquidCrystal.h>
#include <DHT.h>
//#include <DHT_U.h>
#include <Adafruit_Sensor.h>
//#include "DHT.h"

#define DHTPIN 2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

float humidity;
float temperature;

int measurePin = A2;
int ledPower = 13;
int mq_135= A0;

int RS=12;
int EN=11;
int D4=10;
int D5=9;
int D6=8;
int D7=7;
unsigned int samplingTime = 280;
unsigned int deltaTime = 40;
unsigned int sleepTime = 9680;
float sensor_val;

float voMeasured = 0;
float calcVoltage = 0;
float dustDensity = 0;
bool flag=0;
LiquidCrystal lcd(RS,EN,D4,D5,D6,D7);
void GPRS_send(float a,float b, float c,float d);

void setup()
{
  Serial.begin(9600);
  pinMode(ledPower,OUTPUT);
  pinMode(mq_135,INPUT);
  dht.begin();
  lcd.begin(16,2);
}

void loop()
{
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("AIR POLLUTION");
  lcd.setCursor(3,1);
  lcd.print("MONITORING");
  delay(1000);
  digitalWrite(ledPower,LOW);
  delayMicroseconds(samplingTime);

  voMeasured = analogRead(measurePin);

  delayMicroseconds(deltaTime);
  digitalWrite(ledPower,HIGH);
  delayMicroseconds(sleepTime);

  calcVoltage = voMeasured*(5.0/1024);
  dustDensity = 0.17*calcVoltage-0.1;

  sensor_val= analogRead(mq_135);

  float humidity = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float temperature = dht.readTemperature();

  Serial.print("Temperature: ");
  Serial.println(temperature);
  Serial.print("Humidity: ");
  Serial.println(humidity);

  Serial.print("Dust Density: ");
  Serial.println(dustDensity);

   Serial.print("AirQua=");
  Serial.print(sensor_val);               // prints the value read
  Serial.println(" PPM");

  lcd.setCursor(0,0);
  lcd.print("AirQua=");
  lcd.print(sensor_val);
  lcd.setCursor(0,1);
  lcd.print("Dust=");
  lcd.print(dustDensity);
  lcd.setCursor(10,1);
  lcd.print("PPM");
  delay(2000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Temp=");
  lcd.print(temperature);
  lcd.setCursor(0,1);
  lcd.print("Humi=");
  lcd.print(humidity);
  delay(2000);
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("UPLOADING...");
  GPRS_send(sensor_val,dustDensity,temperature,humidity);
  delay(1000);
  lcd.setCursor(0,1);
  lcd.print("UPLOADED");
  delay(2000);

  if (sensor_val>470 || temperature>26 || humidity>40 || dustDensity<0.62 )
  {
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("ALERT");
    lcd.setCursor(0,1);
    lcd.print("POLLUTION");
    delay(1000);
    SendMessage(sensor_val,dustDensity,temperature,humidity);
    delay(1000);
  }
  delay(1000);
}

void SendMessage(float a,float b, float c,float d)
{
  
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Sending Msg....");
      Serial.println("AT+CMGF=1");
      delay(1000);  // Delay of 1000 milli seconds or 1 second
      delay(100);
      Serial.println("AT+CMGS=\"+917093945191\"\r");
      delay(1000);
      Serial.println("Air Pollution Monitoring:: ");
      Serial.print("Air Quality= ");
      Serial.println(a);
      Serial.print("Temperature= ");
      Serial.println(c);
      Serial.print("Humidity = ");
      Serial.println(d);
      Serial.print("Dust Density= ");
      Serial.println(b);
      delay(100);
      Serial.println((char)26);// ASCII code of CTRL+Z
      delay(1000);
      lcd.setCursor(0,1);
      lcd.print(" MSG SEND");
      delay(1000);
      
}

void GPRS_send(float a,float b, float c,float d)
{
 // Serial.println(a);
  //Serial.println("v is");
 // Serial.println(ph_value);
lcd.setCursor(0, 1);
  delay(10);
  lcd.print("UPLOADING DATA..");
  delay(500);
Serial.println("AT");
delay(1000);
Serial.println("AT+CPIN?");//check for sim
delay(1000);
Serial.println("AT+CREG?"); // checking sim registeration
delay(1000); 
Serial.println("AT+CGATT?");//checking if MS is connected to GPRS
delay(1000);
Serial.println("AT+CIPSHUT");
delay(1000); 
Serial.println("AT+CIPSTATUS"); // current connection status
delay(2000);
Serial.println("AT+CIPMUX=0");// start multiconnection
delay(2000);
Serial.println("AT+CSTT=\"airtelgprs.com\"");// APN of the sim
delay(1000);
Serial.println("AT+CIICR ");// start wireless connection with GPRS
delay(3000);
Serial.println("AT+CIFSR ");//get local IP address
delay(1000); 
Serial.println("AT+CIPSPRT=0");
delay(3000); 
Serial.println("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",\"80\"");// start TCP connection AT+HTTPPARA=\"URL\",\"api.thingspeak.com/update\"
delay(5000);  
Serial.println("AT+CIPSEND");// send data through TCP/UDP connection
delay(5000);
//String str="GET https://api.thingspeak.com/update?api_key=PESQLADSZ6S92RM0&field1=" +String(a)+"&field2=" +String(b); 

  String str1="GET https://api.thingspeak.com/update?api_key=MVZZZ21IAE5TU4RD&field1=" +String(a)+"&field2=" +String(b)+"&field3=" +String(c)+"&field4=" +String(d); 
  Serial.println(str1);
  delay(100);
  Serial.println((char)26);


//mySerial.print(str);
Serial.println();
delay(3000);
Serial.write(26);
delay(1000); 
Serial.println();
Serial.println("AT+CIPSHUT");
delay(1000); 
lcd.clear();
lcd.setCursor(0, 0);
 delay(10);
 lcd.print("   COMPLETE     ");
  delay(1000);
}
